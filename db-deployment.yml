apiVersion: apps/v1
kind: Deployment # what to create?
metadata:
  name: redis-deployment
spec: # specification for deployment resource
  replicas: 1 # how many replicas of pods we want to create
  selector:
    matchLabels:
      app: redis
  template: # blueprint for pods
    metadata:
      labels:
        app: redis # service will look for this label
    spec: # specification for pods
      containers: # we can have one or more containers
      - name: redis
        image: yavarkhodadadi/counter-db:1.0
        ports:
        - containerPort: 6379 
        volumeMounts:
        - name: redis-persistent-storage
          mountPath: /data
      volumes:
      - name: redis-persistent-storage
        persistentVolumeClaim:
          claimName: redis-pv-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/yavar/php-redis-counter/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis-service
  namespace: redis-counter
spec:
  clusterIP: 10.110.121.159
  clusterIPs:
  - 10.110.121.159
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
